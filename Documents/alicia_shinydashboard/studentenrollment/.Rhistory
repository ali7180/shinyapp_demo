###workrelated injuries
occupation_injuries17 <- read_excel('Desktop/work_related_injuries2017.xlsx')
View(occupation_injuries17)
occupation_injuries17$`Count of Injuries`<-as.integer(occupation_injuries17$`Count of Injuries`)
View(occupation_injuries17)
is.integer(occupation_injuries17$`Count of Injuries`)
occupation_injuries17<-rename(occupation_injuries17, injury_cnt = "Count of Injuries")
View(test)
occupation_injuriesplot <- ggplot(occupation_injuries17, aes(x=Occupation,  y= injury_cnt, fill=injury_cnt, color =injury_cnt))+
geom_col()
occupation_injuriesplot<- occupation_injuriesplot + labs(x = "Occupation")
occupation_injuriesplot<- occupation_injuriesplot + labs(y = "Injury Count")
occupation_injuriesplot<- occupation_injuriesplot + labs(title = "2017 Injury by Occupation")
occupation_injuriesplot<- occupation_injuriesplot + theme(axis.text.x = element_text(angle = 90, hjust = 1))
occupation_injuriesplot
#test out maps
library(ggplot2)
library(gganimate)
theme_set(theme_bw())  # pre-set the bw theme.
g <- ggplot(labor_bytitle, aes( x =labor_bytitle$per_cap_occ, y =per_capita$deaths_percapita)) +
geom_point(shape=18, color="blue")+
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")+
scale_x_log10()
g
##remove the scientific notation off the files
##order
View(per_capita)
# graduation data vs. deaths p
#test
devtools::install_github("dkahle/ggmap")
devtools::install_github("hrbrmstr/ggalt")
library(ggplot2)
library(ggmap)
library(ggalt)
opiods<-read_csv('/Users/alicaiortiz/Documents/data-question-5-opioids-blue-cheetahs/us-opiate-prescriptions/opioids.csv')
prescribers<-read.csv('/Users/alicaiortiz/Documents/data-question-5-opioids-blue-cheetahs/us-opiate-prescriptions/prescriber-info.csv')
prescribers<-read.csv('/Users/alicaiortiz/Documents/data-question-5-opioids-blue-cheetahs/us-opiate-prescriptions/prescriber-info.csv')
prescribers<-read.csv('Documents/data-question-5-opioids-blue-cheetahs/us-opiate-prescriptions/prescriber-info.csv')
opiods<-read_csv('Documents/data-question-5-opioids-blue-cheetahs/us-opiate-prescriptions/opioids.csv')
deaths<-read_csv('Documents/data-question-5-opioids-blue-cheetahs/us-opiate-prescriptions/overdoses.csv')
View(deaths)
View(opiods)
View(prescribers)
theme_set(theme_bw())  # pre-set the bw theme.
library(tidyverse)
prescribers<-read.csv('Documents/data-question-5-opioids-blue-cheetahs/us-opiate-prescriptions/prescriber-info.csv')
opiods<-read_csv('Documents/data-question-5-opioids-blue-cheetahs/us-opiate-prescriptions/opioids.csv')
deaths<-read_csv('Documents/data-question-5-opioids-blue-cheetahs/us-opiate-prescriptions/overdoses.csv')
View(deaths)
View(opiods)
View(prescribers)
prescribers<-gather(prescribers, drugs, drug_cnt, "ABILIFY":"ZOLPIDEM.TARTRATE" )
View(prescribers)
#opiodscount_on_perscriber_data
base_opioids <- c("fentanyl","codeine","morphine","opium","butorphanol","buprenorphine","hydrocodone","tramadol","meperdine","hydromorphone","methadone","fentanyl","levorphanol","nalbuphine","tepentadol","oxymorphone","pentazocine","oxycodone")
lookup_char<- paste(base_opioids,collapse="|")
w <- grep(lookup_char,tolower(prescribers$drugs))
prescribers_opiods <- prescribers[w,]
View(prescribers_opiods)
#drug prescriptions by_state_plot
by_state<-prescribers_opiods%>%
group_by(State)%>%
summarise(drug_cnt = sum(drug_cnt))
arrange(max(drug_cnt))
View(by_state)
ggpareto(by_state)
p<-ggplot(data=by_state, aes(x=reorder(State, drug_cnt), y=drug_cnt)) +
geom_bar(stat="identity",)
p
p + theme(axis.text.x = element_text(angle = 90, hjust = 1))
p
#opiod prescription by speciality and and credential
by_credential<-prescribers_opiods%>%
group_by(Credentials)%>%
summarise(drug_cnt = sum(drug_cnt))
arrange(max(drug_cnt))
View(by_credential)
by_specialty<-prescribers_opiods%>%
group_by(Specialty)%>%
summarise(drug_cnt = sum(drug_cnt))
arrange(max(drug_cnt))
View(by_specialty)
-----------------------------
per_state_drugcnt<-top_n(prescribers_opiods, n=25, drug_cnt)
View(per_state_drugcnt)
by_state_drugcnt<-ggplot(per_state_drugcnt, aes(x=Specialty, y=drug_cnt, fill=State)) +
geom_bar(stat="identity",)
by_state_drugcnt<- by_state_drugcnt + labs(x = "Specialty")
by_state_drugcnt<- by_state_drugcnt + labs(y = "Drug Count")
by_state_drugcnt<- by_state_drugcnt + labs(title = "Top 25 Prescribers by Specialty")
by_state_drugcnt<- by_state_drugcnt + theme(axis.text.x = element_text(angle = 90, hjust = 1))
by_state_drugcnt
#bygender
by_gender<-prescribers_opiods%>%
group_by(State,Gender)%>%
summarise(drug_cnt = sum(drug_cnt))
arrange(max(drug_cnt))
View(by_gender)
by_gender <- ggplot(by_gender, aes(x = reorder(State, drug_cnt), y = drug_cnt, fill=Gender, color=Gender))+
geom_bar(stat="identity")
by_gender<- by_gender + labs(x = "State")
by_gender<- by_gender + labs(y = "Drug Count")
by_gender<- by_gender+ labs(title = "Prescribers by Gender")
by_gender<- by_gender + theme(axis.text.x = element_text(angle = 90, hjust = 1))
by_gender
View(prescribers_opiods)
View(deaths)
#renaming variables and merging deaths and prescribers to see a scatterplot of deaths_per_capita v opiods perscribed in that state
prescribers_opiods<-rename(prescribers_opiods, Abbrev = State)
View(prescribers_opiods)
deaths_prescribers<-full_join(deaths, prescribers_opiods, by = "Abbrev")
deaths_prescribers
View(deaths_prescribers)
#creating and testing plots
state_deathcounts<- ggplot(deaths_prescribers, aes(x=Deaths, y=drug_cnt, fill= State, color=State))+
geom_point( position="jitter")
state_deathcounts
state_deathcounts2<- ggplot(deaths_prescribers, aes(x=Deaths, y=drug_cnt))+
geom_point()+
geom_text(label=(deaths_prescribers))
state_deathcounts2
View(deaths_prescribers)
deaths_prescribers<- mutate()
#lm
lm(Deaths ~ drug_cnt, data = deaths_prescribers)
state_deathcounts<- ggplot(specialty_deaths, aes(x=deaths, y=drug_cnt))+
geom_point()+
geom_smooth(method="lm", se=FALSE)
state_deathcounts
#------------------------------------------------------ divide the population per capita
#pareto_effects
library(qcc)
state_test<-ggplot(by_test, aes(x=Gender)) +
geom_bar(aes(y=drug_cnt), fill="blue", stat="identity") +
geom_point(aes(y=drug_cnt)) +
geom_path(aes(y=drug_cnt, group=1))
specialty_deaths<-ggplot(specialty_deaths, aes(x=Specialty)) +
geom_bar(aes(y=deaths), fill="blue", stat="identity") +
geom_point(aes(y=deaths)) +
geom_path(aes(y=deaths, group=1))
specialty_deaths$deaths<-factor(specialty_deaths$deaths, levels = specialty_deaths$deaths[order(~drug_cnt)])
View(specialty_deaths)
ggplot (specialty_deaths, aes(x=deaths, y=drug_cnt)) +
geom_dotplot()
#plotting specialty_deaths
ggplot(
data = specialty_deaths,
aes(x = State, y = deaths)
) +
geom_boxplot(outlier.shape = NA) +
geom_point(
aes(color = State),
position =
position_jitter(width = 0.2),
alpha = 0.6
) +
scale_x_discrete(name="Continent") +
scale_color_hue(guide = FALSE)
t<-ggplot(
data = specialty_deaths,
aes(x = State, y = deaths,
group = Specialty, fill = Specialty)
) +
geom_bar(
stat = "identity",
position = position_stack()
)
t
#bydeaths
t<-top_n(deaths, n=5, Deaths) %>%
ggplot(., aes(x=State, y=Deaths)) +
geom_bar(stat='identity')
t
per_capita <-mutate(deaths,
deaths_percapita = Deaths/Population * 100000)
View(per_capita)
per_capita<-rename(per_capita, Abbrev = state1 )
View(per_capita)
per_capitadeaths<-top_n(per_capita, n=5, deaths_percapita) %>%
ggplot(., aes(x=State, y=Deaths,color='pink')) +
geom_bar(stat='identity')
per_capitadeaths
View(prescribers_opiods)
perscribers_opiodschart <-top_n(prescribers_opiods, n=25, drug_cnt)
View(perscribers_opiodschart)
is.data.frame(perscribers_opiodschart)
top_opiod_prescriber_by_state_drug <- ggplot(data = perscribers_opiodschart, aes(x = Specialty, y= drug_cnt, fill=drugs, color= State)) +
geom_bar(stat="identity")
top_opiod_prescriber_by_drug <- ggplot(data = perscribers_opiodschart, aes(x = Specialty, y= drug_cnt, fill=drugs, color= drugs)) +
geom_bar(stat="identity")
------------------
#labordata- (1) Sort data by employment rate (2) normalize data on opiods
library(readxl)
labor_data <- read_excel("Desktop/bls_intensivelabordata.xlsx", na = "**")
View(labor_data)
labor_data <- select(labor_data, area_title, `occ title`, tot_emp)
View(labor_data)
/deaths$Population
### group_by_state
labor_bytitle <-labor_data %>%
group_by(area_title) %>%
summarise(`occ title`=n(), sum(tot_emp, na.rm = TRUE))
View(labor_bytitle)
labor_bytitle <-mutate(labor_bytitle, per_cap_occ =  `occ title`/deaths$Population *100000)
View(labor_bytitle)
territories <-c('Guam', 'Virgin Islands', 'District of Columbia','Puerto Rico')
labor_bytitle<-labor_bytitle[!(labor_bytitle$area_title %in% territories),]
View(labor_bytitle)
labor_bytitle2 <-top_n(labor_bytitle, n=10, per_cap_occ)
labor_bytitleplt<-ggplot(labor_bytitle2, aes(x=area_title, y=per_cap_occ, color=area_title)) + geom_bar(stat="identity")
labor_bytitleplt<- labor_bytitleplt + labs(x = "State")
labor_bytitleplt<- labor_bytitleplt + labs(y = "Occupation Count")
labor_bytitleplt<- labor_bytitleplt + labs(title = "Occupation Count by State")
labor_bytitleplt<- labor_bytitleplt + theme(axis.text.x = element_text(angle = 90, hjust = 1))
labor_bytitleplt
mining_deaths<-ggplot(labor_bytitle, aes(y = per_capita$deaths_percapita, x = labor_bytitle$per_cap_occ))+ geom_point() + geom_smooth(method ="lm", se =FALSE)+geom_text(aes (label=per_capita$State))+scale_x_log10()
mining_deaths
###workrelated injuries
occupation_injuries17 <- read_excel('Desktop/work_related_injuries2017.xlsx')
View(occupation_injuries17)
occupation_injuries17$`Count of Injuries`<-as.integer(occupation_injuries17$`Count of Injuries`)
View(occupation_injuries17)
is.integer(occupation_injuries17$`Count of Injuries`)
occupation_injuries17<-rename(occupation_injuries17, injury_cnt = "Count of Injuries")
View(test)
occupation_injuriesplot <- ggplot(occupation_injuries17, aes(x=Occupation,  y= injury_cnt, fill=injury_cnt, color =injury_cnt))+
geom_col()
occupation_injuriesplot<- occupation_injuriesplot + labs(x = "Occupation")
occupation_injuriesplot<- occupation_injuriesplot + labs(y = "Injury Count")
occupation_injuriesplot<- occupation_injuriesplot + labs(title = "2017 Injury by Occupation")
occupation_injuriesplot<- occupation_injuriesplot + theme(axis.text.x = element_text(angle = 90, hjust = 1))
occupation_injuriesplot
#test out maps
library(ggplot2)
library(gganimate)
theme_set(theme_bw())  # pre-set the bw theme.
g <- ggplot(labor_bytitle, aes( x =labor_bytitle$per_cap_occ, y =per_capita$deaths_percapita)) +
geom_point(shape=18, color="blue")+
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")+
scale_x_log10()
g
##remove the scientific notation off the files
##order
View(per_capita)
# graduation data vs. deaths p
#test
devtools::install_github("dkahle/ggmap")
devtools::install_github("hrbrmstr/ggalt")
library(ggplot2)
library(ggmap)
library(ggalt)
g <- ggplot(labor_bytitle, aes( x =labor_bytitle$per_cap_occ, y =per_capita$deaths_percapita)) +
geom_point(shape=18, color="blue")+
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")+
scale_x_log10()
g
occupation_injuriesplot <- ggplot(occupation_injuries17, aes(x=Occupation,  y= injury_cnt, fill=injury_cnt, color =injury_cnt))+
geom_col()
occupation_injuriesplot<- occupation_injuriesplot + labs(x = "Occupation")
occupation_injuriesplot<- occupation_injuriesplot + labs(y = "Injury Count")
occupation_injuriesplot<- occupation_injuriesplot + labs(title = "2017 Injury by Occupation")
occupation_injuriesplot<- occupation_injuriesplot + theme(axis.text.x = element_text(angle = 90, hjust = 1))
occupation_injuriesplot
mining_deaths<-ggplot(labor_bytitle, aes(y = per_capita$deaths_percapita, x = labor_bytitle$per_cap_occ))+ geom_point() + geom_smooth(method ="lm", se =FALSE)+geom_text(aes (label=per_capita$State))+scale_x_log10()
mining_deaths
mining_deaths<-ggplot(labor_bytitle, aes(y = per_capita$deaths_percapita, x = labor_bytitle$per_cap_occ))+ geom_point() + geom_smooth(method ="lm", se =FALSE)+geom_text(aes (label=per_capita$State)position = position_dodge(width=0.9,  size=20)+scale_x_log10()
mining_deaths
mining_deaths<-ggplot(labor_bytitle, aes(y = per_capita$deaths_percapita, x = labor_bytitle$per_cap_occ))+ geom_point() + geom_smooth(method ="lm", se =FALSE)+geom_text(aes (label=per_capita$State)position = position_dodge(width=0.9,  size=10)+scale_x_log10()
mining_deaths
mining_deaths<-ggplot(labor_bytitle, aes(y = per_capita$deaths_percapita, x = labor_bytitle$per_cap_occ))+ geom_point() + geom_smooth(method ="lm", se =FALSE)+geom_text(aes (label=per_capita$State)position = position_dodge(width=0.5,  size=5)+scale_x_log10()
mining_deaths
mining_deaths<-ggplot(labor_bytitle, aes(y = per_capita$deaths_percapita, x = labor_bytitle$per_cap_occ))+ geom_point() + geom_smooth(method ="lm", se =FALSE)+geom_text(aes (label=per_capita$State)position = position_dodge(width=0.2,  size=14)+scale_x_log10()
mining_deaths
mining_deaths<-ggplot(labor_bytitle, aes(y = per_capita$deaths_percapita, x = labor_bytitle$per_cap_occ))+ geom_point()
+ geom_smooth(method ="lm", se =FALSE)+geom_text(aes (label=per_capita$State)position = position_dodge(width=0.2,  size=14)
+ scale_x_log10()
mining_deaths
mining_deaths<-ggplot(labor_bytitle, aes(y = per_capita$deaths_percapita, x = labor_bytitle$per_cap_occ))
+ geom_point()
+ geom_smooth(method ="lm", se =FALSE)+geom_text(aes (label=per_capita$State)position = position_dodge(width=0.2,  size=14)
+ scale_x_log10()
mining_deaths
mining_deaths<-ggplot(labor_bytitle, aes(y = per_capita$deaths_percapita, x = labor_bytitle$per_cap_occ))+ geom_point() + geom_smooth(method ="lm", se =FALSE)+geom_text(aes (label=per_capita$State)position = position_dodge(width=0.2,  size=14)+ scale_x_log10()
mining_deaths
labor_bytitle <-labor_data %>%
group_by(area_title) %>%
summarise(`occ title`=n(), sum(tot_emp, na.rm = TRUE))
View(labor_bytitle)
labor_bytitle <-mutate(labor_bytitle, per_cap_occ =  `occ title`/deaths$Population *100000)
View(labor_bytitle)
territories <-c('Guam', 'Virgin Islands', 'District of Columbia','Puerto Rico')
labor_bytitle<-labor_bytitle[!(labor_bytitle$area_title %in% territories),]
View(labor_bytitle)
labor_bytitle2 <-top_n(labor_bytitle, n=10, per_cap_occ)
labor_bytitleplt<-ggplot(labor_bytitle2, aes(x=area_title, y=per_cap_occ, color=area_title)) + geom_bar(stat="identity")
labor_bytitleplt<- labor_bytitleplt + labs(x = "State")
labor_bytitleplt<- labor_bytitleplt + labs(y = "Occupation Count")
labor_bytitleplt<- labor_bytitleplt + labs(title = "Occupation Count by State")
labor_bytitleplt<- labor_bytitleplt + theme(axis.text.x = element_text(angle = 90, hjust = 1))
labor_bytitleplt
abor_bytitle <-labor_data %>%
group_by(area_title) %>%
summarise(`occ title`=n(), sum(tot_emp, na.rm = TRUE))
View(labor_bytitle)
labor_bytitle <-mutate(labor_bytitle, per_cap_occ =  `occ title`/deaths$Population *100000)
View(labor_bytitle)
territories <-c('Guam', 'Virgin Islands', 'District of Columbia','Puerto Rico')
labor_bytitle<-labor_bytitle[!(labor_bytitle$area_title %in% territories),]
View(labor_bytitle)
labor_bytitle2 <-top_n(labor_bytitle, n=10, per_cap_occ)
labor_bytitleplt<-ggplot(labor_bytitle2, aes(x=area_title, y=per_cap_occ, color=area_title)) + geom_bar(stat="identity")
labor_bytitleplt<- labor_bytitleplt + labs(x = "State")
labor_bytitleplt<- labor_bytitleplt + labs(y = "Mining, Construction and Extraction Per Capita")
labor_bytitleplt<- labor_bytitleplt + labs(title = "Top 10 Construction and Extraction States ")
labor_bytitleplt<- labor_bytitleplt + theme(axis.text.x = element_text(angle = 90, hjust = 1))
labor_bytitleplt
labor_bytitle2 <-top_n(labor_bytitle, n=10, per_cap_occ)
labor_bytitleplt<-ggplot(labor_bytitle2, aes(x=area_title, y=per_cap_occ, color=area_title)) + geom_bar(stat="identity")
labor_bytitleplt<- labor_bytitleplt + labs(x = "State")
labor_bytitleplt<- labor_bytitleplt + labs(y = "Mining, Construction and Extraction Per Capita")
labor_bytitleplt<- labor_bytitleplt + labs(title = "Top 10 Construction and Extraction States ")
labor_bytitleplt<- labor_bytitleplt + labs(subtitle = "*per 100,000* ")
labor_bytitleplt<- labor_bytitleplt + theme(axis.text.x = element_text(angle = 90, hjust = 1))
labor_bytitleplt
g <- ggplot(labor_bytitle, aes( x =labor_bytitle$per_cap_occ, y =per_capita$deaths_percapita)) +
geom_point(shape=18, color="blue")+
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")+
scale_x_log10()
g
g <- ggplot(labor_bytitle, aes( x =labor_bytitle$per_cap_occ, y =per_capita$deaths_percapita)) +
geom_point(shape=18, color="blue")+
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")+
scale_x_log10()
g<- g + labs(x = "State")
g<- g + labs(y = "Deaths per Capita")
g<- g + labs(title = " Construction and Extraction Occupations ")
g<- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g
g <- ggplot(labor_bytitle, aes( x =labor_bytitle$per_cap_occ, y =per_capita$deaths_percapita)) +
geom_point(shape=18, color="blue")+
geom_smooth(method=lm,  linetype="dashed",
color="darkred", fill="blue")+
scale_x_log10()
g<- g + labs(x = "Construction and Extraction Occupations")
g<- g + labs(y = "Overdose Deaths per Capita")
g<- g + labs(title = "Examining Opiod Deaths with Extraction and Construction Occupations")
g<- g + theme(axis.text.x = element_text(angle = 90, hjust = 1))
g
library(ggplot2)
mining_deaths<-ggplot(labor_bytitle, aes(y = per_capita$deaths_percapita, x = labor_bytitle$per_cap_occ))+ geom_point() + geom_smooth(method ="lm", se =FALSE)+geom_text(aes (label=per_capita$State)position = position_dodge(width=0.2,  size=14)+ scale_x_log10()
mining_deaths
mining_deaths<-ggplot(labor_bytitle, aes(y = per_capita$deaths_percapita, x = labor_bytitle$per_cap_occ))+ geom_point() + geom_smooth(method ="lm", se =FALSE)+geom_text(aes (label=per_capita$State))+ scale_x_log10()
mining_deaths
mining_deaths<-ggplot(labor_bytitle, aes(y = per_capita$deaths_percapita, x = labor_bytitle$per_cap_occ))+ geom_point() + geom_smooth(method ="lm", se =FALSE)+geom_text(aes (label=per_capita$State))+ scale_x_log10()
mining_deaths<- mining_deaths + labs(x = "State")
mining_deaths<- mining_deaths + labs(y = "Mining, Construction and Extraction Per Capita")
mining_deaths<- mining_deaths + labs(title = "Top 10 Construction and Extraction States ")
mining_deaths<- mining_deaths + labs(subtitle = "*per 100,000* ")
mining_deaths<- mining_deaths + theme(axis.text.x = element_text(angle = 90, hjust = 1))
mining_deaths
library(readxl)
labor_data <- read_excel("Desktop/bls_intensivelabordata.xlsx", na = "**")
View(labor_data)
labor_data <- select(labor_data, area_title, `occ title`, tot_emp)
View(labor_data)
/deaths$Population
### group_by_state
labor_bytitle <-labor_data %>%
group_by(area_title) %>%
summarise(`occ title`=n(), sum(tot_emp, na.rm = TRUE))
View(labor_bytitle)
labor_bytitle <-mutate(labor_bytitle, per_cap_occ =  `occ title`/deaths$Population *100000)
View(labor_bytitle)
territories <-c('Guam', 'Virgin Islands', 'District of Columbia','Puerto Rico')
labor_bytitle<-labor_bytitle[!(labor_bytitle$area_title %in% territories),]
View(labor_bytitle)
labor_bytitle2 <-top_n(labor_bytitle, n=10, per_cap_occ)
labor_bytitleplt<-ggplot(labor_bytitle2, aes(x=area_title, y=per_cap_occ, color=area_title)) + geom_bar(stat="identity")
labor_bytitleplt<- labor_bytitleplt + labs(x = "State")
labor_bytitleplt<- labor_bytitleplt + labs(y = "Mining, Construction and Extraction Per Capita")
labor_bytitleplt<- labor_bytitleplt + labs(title = "Top 10 Construction and Extraction States ")
labor_bytitleplt<- labor_bytitleplt + labs(subtitle = "*per 100,000* ")
labor_bytitleplt<- labor_bytitleplt + theme(axis.text.x = element_text(angle = 90, hjust = 1))
labor_bytitleplt
suppressMessages({
library(rgeos)
library(maptools)
library(ggplot2)
})
library(dplyr)
opiod_data <- read.csv('Desktop/all_county_data.csv')
View(opiod_data)
summary(opiod_data)
opiod_data<-rename(opiod_data, name = County)
opiod_data<-rename(opiod_data, FIPS = countyfps)
opiod_data = mutate(opiod_data, deaths_percap = Opioid_Death_Cumal/Population *10000)
opiod_data$deaths_percap = round(opiod_data$deaths_percap, digits = 0.01)
View(opiod_data)
tn_county_shape <-readShapeSpatial('Downloads/TN_counties/TN_counties.shp')
plot(tn_county_shape)
View(tn_county_shape)
#tn_map_counties1<-readShapeSpatial('Downloads/Counties/Counties.shp')
#plot(tn_map_counties1)
#tn_map_counties1$name <- toupper(tn_map_counties1$name)
#View(tn_map_counties1)
#map
library(ggplot2)
tn_county_shape<-fortify(tn_county_shape, region="FIPS")
View(tn_county_shape)
#map out deaths by county
#factorscale
f <-ggplot() +
geom_map(data = opiod_data, aes(map_id = FIPS, fill = factor(deaths_percap)), map = tn_county_shape) +
expand_limits(x = tn_county_shape$long, y = tn_county_shape$lat)
f
#continouscale
c <-ggplot() +
geom_map(data = opiod_data, aes(map_id = FIPS, fill = deaths_percap), map = tn_county_shape, color ="black") +
expand_limits(x = tn_county_shape$long, y = tn_county_shape$lat) +
theme(legend.position = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
scale_fill_gradient(low="white", high="blue") +
guides(fill = guide_colorbar(barwidth = 10, barheight = .5)) +
ggtitle("Deaths by County ")
c
education <-ggplot() +
geom_map(data = opiod_data, aes(map_id = FIPS, fill = education), map = tn_county_shape, color ="black") +
expand_limits(x = tn_county_shape$long, y = tn_county_shape$lat) +
theme(legend.position = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
scale_fill_gradient(low="white", high="blue") +
guides(fill = guide_colorbar(barwidth = 10, barheight = .5)) +
ggtitle("Grduation Rate by County ")
education
labor_force <-ggplot() +
geom_map(data = opiod_data, aes(map_id = FIPS, fill = Labor_force), map = tn_county_shape, color ="black") +
expand_limits(x = tn_county_shape$long, y = tn_county_shape$lat) +
theme(legend.position = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
scale_fill_gradient(low="white", high="blue") +
guides(fill = guide_colorbar(barwidth = 10, barheight = .5))
labor_force
summary(tn_map_counties1)
c <-ggplot() +
geom_map(data = opiod_data, aes(map_id = FIPS, fill = deaths_percap), map = tn_county_shape, color ="black") +
expand_limits(x = tn_county_shape$long, y = tn_county_shape$lat) +
theme(legend.position = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
scale_fill_gradient(low="white", high="blue") +
guides(fill = guide_colorbar(barwidth = 10, barheight = .5)) +
ggtitle("2014 Opiod Deaths by County ")
c
c <-ggplot() +
geom_map(data = opiod_data, aes(map_id = FIPS, fill = deaths_percap), map = tn_county_shape, color ="black") +
expand_limits(x = tn_county_shape$long, y = tn_county_shape$lat) +
theme(legend.position = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
scale_fill_gradient(low="white", high="blue") +
guides(fill = guide_colorbar(barwidth = 10, barheight = .5)) +
ggtitle("2014 Opioid Deaths by County ")
c
tn_county_shape<-readShapeSpatial('/Users/alicaiortiz/Downloads/TN_counties/TN_counties.shp')
suppressMessages({
library(rgeos)
library(maptools)
library(ggplot2)
})
library(dplyr)
opiod_data <- read.csv('/Users/aliciaortiz/Documents/data-question-5-opioids-blue-cheetahs/all_county_data.csv')
summary(opiod_data)
opiod_data<-rename(opiod_data, name = County)
opiod_data<-rename(opiod_data, FIPS = countyfps)
opiod_data = mutate(opiod_data, deaths_percap = Opioid_Death_Cumal/Population *10000)
opiod_data$deaths_percap = round(opiod_data$deaths_percap, digits = 0.01)
tn_county_shape<-readShapeSpatial('/Users/aliciaortiz/Documents/data-question-5-opioids-blue-cheetahs/TN_counties/TN_counties.shp')
plot(tn_county_shape)
View(tn_county_shape)
c <-ggplot() +
geom_map(data = opiod_data, aes(map_id = FIPS, fill = deaths_percap), map =tn_county_shape, color ="black") +
expand_limits(x = tn_county_shape$long, y = tn_county_shape$lat) +
theme(legend.position = "bottom",
axis.ticks = element_blank(),
axis.title = element_blank(),
axis.text = element_blank()) +
scale_fill_gradient(low="white", high="blue") +
guides(fill = guide_colorbar(barwidth = 10, barheight = .5)) +
ggtitle("2014 Opioid Deaths by County ")
library(tidyverse)
prescribers<-read.csv('Documents/data-question-5-opioids-blue-cheetahs/us-opiate-prescriptions/prescriber-info.csv')
opiods<-read_csv('Documents/data-question-5-opioids-blue-cheetahs/us-opiate-prescriptions/opioids.csv')
deaths<-read_csv('Documents/data-question-5-opioids-blue-cheetahs/us-opiate-prescriptions/overdoses.csv')
View(deaths)
View(opiods)
View(prescribers)
prescribers<-gather(prescribers, drugs, drug_cnt, "ABILIFY":"ZOLPIDEM.TARTRATE" )
View(prescribers)
shiny::runApp('Desktop/Shinytestrun/studentenrollment')
